#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import syd
import click
import pydicom
import os

# -----------------------------------------------------------------------------
CONTEXT_SETTINGS = dict(help_option_names=['-h', '--help'])
@click.command(context_settings=CONTEXT_SETTINGS)
@click.argument('filename', default='')
@click.option('--id',
              help='print dicom tag for the given id') ## FIXME filename as options, id as arg/pipe
@click.option('--db', default='',
              help='DB filename (SYD_DB_FILENAME environment variable is used if no filename)')
def syd_dicom_info(filename, id, db):
    '''
    Print dicom tags/value of the given filename
    '''

    if filename != '' and id != None:
        syd.fatal('Error, gives either filename or id, not both')

    if filename == '' and id == None:
        syd.fatal('Error, gives either filename or id')

    if (id):
        db_filename = syd.get_db_filename(db)
        db = syd.open_db(db_filename)
        dicom_serie = syd.find_one(db['DicomSerie'], id=id)
        files = syd.get_dicom_serie_files(db, dicom_serie)
        filename = syd.get_file_absolute_filename(db, files[0])

    # check if already exist
    if (os.path.isdir(filename)):
        print('Error {} is a directory, not a file.'.format(filename))
        exit(0)
    if (not os.path.isfile(filename)):
        print('Error {} does not exist.'.format(filename))
        exit(0)

    # open the dicom
    try:
        ds = pydicom.read_file(filename)
    except:
        print('Error {} is not a dicom file.'.format(filename))
        exit(0)

    # print
    print(ds)


# -----------------------------------------------------------------------------
if __name__ == '__main__':
    syd_dicom_info()
